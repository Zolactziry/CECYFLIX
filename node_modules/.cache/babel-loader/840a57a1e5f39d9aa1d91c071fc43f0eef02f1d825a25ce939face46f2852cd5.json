{"ast":null,"code":"var _jsxFileName = \"C:\\\\AWS\\\\CECYTEMDespliegue\\\\Practica4_1\\\\recomendaciones-ia\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react'; // Importación correcta de hooks\nimport './App.css';\n// import peliculas from './data/peliculas.json'; // Comentado: las películas ahora vienen de la API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estados del componente\n  const [peliculas, setPeliculas] = useState([]); // Almacena la lista completa de películas\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]); // Almacena las películas filtradas\n  const [busqueda, setBusqueda] = useState(''); // Guarda el texto ingresado en el campo de búsqueda\n  const [modoDescripcion, setModoDescripcion] = useState(false); // Controla el modo de búsqueda (IA o tradicional)\n  const [recomendacion, setRecomendacion] = useState(''); // Almacena la recomendación de la IA\n\n  // Efecto secundario para cargar películas al montar el componente\n  useEffect(() => {\n    fetch('/api/peliculas') // Petición al backend para obtener películas\n    .then(res => res.json()).then(data => {\n      setPeliculas(data);\n      setPeliculasFiltradas(data);\n    }).catch(err => console.error('Error al obtener películas:', err));\n  }, []); // El array de dependencias vacío asegura que se ejecuta solo una vez al montar\n\n  // Función para la búsqueda tradicional (por título o género)\n  const handleBuscar = e => {\n    e.preventDefault(); // Previene el comportamiento por defecto del formulario\n    const texto = busqueda.toLowerCase();\n    const resultado = peliculas.filter(p => p.titulo.toLowerCase().includes(texto) || p.genero.toLowerCase().includes(texto) || p.titulo.toLowerCase().startsWith(texto));\n    setPeliculasFiltradas(resultado);\n    setRecomendacion(''); // Limpia cualquier recomendación de IA anterior\n  };\n\n  // Función para la búsqueda por descripción (usando IA)\n  const handleBuscarPorDescripcion = async () => {\n    try {\n      // Petición POST al endpoint de recomendaciones de IA en el backend\n      const res = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: `Dame una recomendación basada en esta descripción: ${busqueda}. Usa solo películas de este catálogo: ${peliculas.map(p => p.titulo).join(', ')}.`\n        })\n      });\n      const data = await res.json();\n      setRecomendacion(data.recomendacion); // Almacena la recomendación de la IA\n\n      // Filtra las películas que coincidan con la recomendación de la IA\n      const seleccionadas = peliculas.filter(p => data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase()));\n      if (seleccionadas.length > 0) {\n        setPeliculasFiltradas(seleccionadas);\n      } else {\n        // Si la IA no encuentra coincidencias, podrías mostrar un mensaje o las películas originales\n        setPeliculasFiltradas([]); // Opcional: limpiar si no hay coincidencias\n      }\n    } catch (err) {\n      console.error('Error con IA:', err);\n      setRecomendacion('No se pudo obtener una recomendación de IA.'); // Mensaje de error para el usuario\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CineVerse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"buscador\",\n      onSubmit: handleBuscar,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por título o género',\n        value: busqueda,\n        onChange: e => setBusqueda(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"botones-busqueda\",\n        children: [modoDescripcion ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleBuscarPorDescripcion,\n          children: \"Buscar con IA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setModoDescripcion(!modoDescripcion),\n          children: [\"Cambiar a b\\xFAsqueda \", modoDescripcion ? 'tradicional' : 'por IA']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), recomendacion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bloque-recomendaciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"IA sugiere:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recomendacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: peliculasFiltradas.length > 0 ? peliculasFiltradas.map((p, i) => {\n        var _p$descripcion;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tarjeta\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: p.poster,\n            alt: p.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: p.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: p.genero\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [(_p$descripcion = p.descripcion) === null || _p$descripcion === void 0 ? void 0 : _p$descripcion.slice(0, 60), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No se encontraron pel\\xEDculas que coincidan con tu b\\xFAsqueda.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7dl2JW6kaHNERAH9j0sOGRRFNCk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","peliculas","setPeliculas","peliculasFiltradas","setPeliculasFiltradas","busqueda","setBusqueda","modoDescripcion","setModoDescripcion","recomendacion","setRecomendacion","fetch","then","res","json","data","catch","err","console","error","handleBuscar","e","preventDefault","texto","toLowerCase","resultado","filter","p","titulo","includes","genero","startsWith","handleBuscarPorDescripcion","method","headers","body","JSON","stringify","prompt","map","join","seleccionadas","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","i","_p$descripcion","src","poster","alt","descripcion","slice","_c","$RefreshReg$"],"sources":["C:/AWS/CECYTEMDespliegue/Practica4_1/recomendaciones-ia/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'; // Importación correcta de hooks\nimport './App.css';\n// import peliculas from './data/peliculas.json'; // Comentado: las películas ahora vienen de la API\n\nfunction App() {\n  // Estados del componente\n  const [peliculas, setPeliculas] = useState([]); // Almacena la lista completa de películas\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]); // Almacena las películas filtradas\n  const [busqueda, setBusqueda] = useState(''); // Guarda el texto ingresado en el campo de búsqueda\n  const [modoDescripcion, setModoDescripcion] = useState(false); // Controla el modo de búsqueda (IA o tradicional)\n  const [recomendacion, setRecomendacion] = useState(''); // Almacena la recomendación de la IA\n\n  // Efecto secundario para cargar películas al montar el componente\n  useEffect(() => {\n    fetch('/api/peliculas') // Petición al backend para obtener películas\n      .then(res => res.json())\n      .then(data => {\n        setPeliculas(data);\n        setPeliculasFiltradas(data);\n      })\n      .catch(err => console.error('Error al obtener películas:', err));\n  }, []); // El array de dependencias vacío asegura que se ejecuta solo una vez al montar\n\n  // Función para la búsqueda tradicional (por título o género)\n  const handleBuscar = (e) => {\n    e.preventDefault(); // Previene el comportamiento por defecto del formulario\n    const texto = busqueda.toLowerCase();\n    const resultado = peliculas.filter(p =>\n      p.titulo.toLowerCase().includes(texto) ||\n      p.genero.toLowerCase().includes(texto) ||\n      p.titulo.toLowerCase().startsWith(texto)\n    );\n    setPeliculasFiltradas(resultado);\n    setRecomendacion(''); // Limpia cualquier recomendación de IA anterior\n  };\n\n  // Función para la búsqueda por descripción (usando IA)\n  const handleBuscarPorDescripcion = async () => {\n    try {\n      // Petición POST al endpoint de recomendaciones de IA en el backend\n      const res = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          prompt: `Dame una recomendación basada en esta descripción: ${busqueda}. Usa solo películas de este catálogo: ${peliculas.map(p => p.titulo).join(', ')}.`\n        })\n      });\n      const data = await res.json();\n      setRecomendacion(data.recomendacion); // Almacena la recomendación de la IA\n\n      // Filtra las películas que coincidan con la recomendación de la IA\n      const seleccionadas = peliculas.filter(p =>\n        data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())\n      );\n\n      if (seleccionadas.length > 0) {\n        setPeliculasFiltradas(seleccionadas);\n      } else {\n        // Si la IA no encuentra coincidencias, podrías mostrar un mensaje o las películas originales\n        setPeliculasFiltradas([]); // Opcional: limpiar si no hay coincidencias\n      }\n    } catch (err) {\n      console.error('Error con IA:', err);\n      setRecomendacion('No se pudo obtener una recomendación de IA.'); // Mensaje de error para el usuario\n    }\n  };\n\n  return (\n    <div className=\"App\"> {/* Contenedor principal para todo el JSX */}\n      <h1>CineVerse</h1>\n\n      <form className=\"buscador\" onSubmit={handleBuscar}>\n        <input\n          type=\"text\"\n          placeholder={modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por título o género'}\n          value={busqueda}\n          onChange={e => setBusqueda(e.target.value)}\n        />\n        <div className=\"botones-busqueda\">\n          {/* Botones condicionales según el modo */}\n          {modoDescripcion ? (\n            <button type=\"button\" onClick={handleBuscarPorDescripcion}>\n              Buscar con IA\n            </button>\n          ) : (\n            <button type=\"submit\">\n              Buscar\n            </button>\n          )}\n          <button type=\"button\" onClick={() => setModoDescripcion(!modoDescripcion)}>\n            Cambiar a búsqueda {modoDescripcion ? 'tradicional' : 'por IA'}\n          </button>\n        </div>\n      </form>\n\n      {recomendacion && (\n        <div className=\"bloque-recomendaciones\">\n          <h2>IA sugiere:</h2>\n          <p>{recomendacion}</p>\n        </div>\n      )}\n\n      <div className=\"grid\">\n        {peliculasFiltradas.length > 0 ? (\n          peliculasFiltradas.map((p, i) => (\n            <div className=\"tarjeta\" key={i}>\n              <img src={p.poster} alt={p.titulo} />\n              <div className=\"info\">\n                <h3>{p.titulo}</h3>\n                <p>{p.genero}</p>\n                <span>{p.descripcion?.slice(0, 60)}...</span>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No se encontraron películas que coincidan con tu búsqueda.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}