{"ast":null,"code":"var _jsxFileName = \"C:\\\\AWS\\\\CECYTEMDespliegue\\\\Practica4_2\\\\recomendaciones-ia\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n//4.1 *********************************************************\n//import React, { useState } from 'react';\nimport './App.css';\n//import peliculas from './data/peliculas.json';\n// ******************************************************************\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estados del componente\n  const [peliculas, setPeliculas] = useState([]);\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n  const [busqueda, setBusqueda] = useState('');\n  const [modoDescripcion, setModoDescripcion] = useState(false);\n  const [recomendacion, setRecomendacion] = useState('');\n  const [loading, setLoading] = useState(true); // Nuevo estado para controlar la carga\n\n  //4.1 **************************************************************\n  const [input, setInput] = useState('');\n  //const [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\n  const [recomendacionIA, setRecomendacionIA] = useState('');\n  const [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\n  const handleBuscarTexto = () => {\n    const texto = input.toLowerCase();\n    const filtradas = peliculas.filter(peli => peli.titulo.toLowerCase().includes(texto) || peli.genero.toLowerCase().includes(texto) || peli.titulo.toLowerCase().startsWith(texto));\n    setPeliculasFiltradas(filtradas);\n    setPeliculasRecomendadas([]);\n    setRecomendacionIA('');\n  };\n  const handleBuscarDescripcion = async () => {\n    setRecomendacionIA('Pensando...');\n    setPeliculasRecomendadas([]);\n    setPeliculasFiltradas([]);\n    try {\n      const response = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: `Tengo una base de datos con estas películas:\n${peliculas.map(p => p.titulo).join(', ')}.\nQuiero que me digas solo los títulos de las películas que coincidan con esta\ndescripción: \"${input}\".\nDevuélveme únicamente los títulos separados por comas.`\n        })\n      });\n      const data = await response.json();\n      const textoIA = data.recomendacion.toLowerCase();\n      setRecomendacionIA(data.recomendacion);\n      const coincidencias = peliculas.filter(peli => textoIA.includes(peli.titulo.toLowerCase()));\n      setPeliculasRecomendadas(coincidencias);\n    } catch (err) {\n      setRecomendacionIA('❌ Error al obtener recomendación IA.');\n    }\n  };\n  //**************************************************************************\n\n  // Efecto para cargar las películas desde el backend al montar el componente\n  useEffect(() => {\n    setLoading(true); // Inicia el estado de carga\n    // Usamos la URL completa para asegurar la conexión al backend\n    fetch('http://localhost:4000/api/peliculas').then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      console.log('Películas obtenidas del backend:', data); // Log para depuración\n      setPeliculas(data);\n      setPeliculasFiltradas(data);\n    }).catch(err => {\n      console.error('Error al obtener películas:', err); // Log de error\n      setPeliculas([]); // En caso de error, asegura que las listas estén vacías\n      setPeliculasFiltradas([]);\n    }).finally(() => {\n      setLoading(false); // Finaliza el estado de carga\n    });\n  }, []); // El array de dependencias vacío asegura que se ejecute solo una vez al montar\n\n  // Función para manejar la búsqueda tradicional por título o género\n  const handleBuscar = e => {\n    e.preventDefault(); // Previene el comportamiento por defecto del formulario\n    const texto = busqueda.toLowerCase();\n    const resultado = peliculas.filter(p => p.titulo.toLowerCase().includes(texto) || p.genero.toLowerCase().includes(texto) || p.titulo.toLowerCase().startsWith(texto));\n    setPeliculasFiltradas(resultado);\n    setRecomendacion(''); // Limpia cualquier recomendación previa de IA\n  };\n\n  // Función para manejar la búsqueda por descripción usando la IA\n  const handleBuscarPorDescripcion = async () => {\n    try {\n      // Realiza una petición POST al endpoint de recomendaciones del backend\n      const res = await fetch('http://localhost:4000/api/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // Envía el prompt a la IA con la descripción del usuario y el catálogo de películas\n        body: JSON.stringify({\n          prompt: `Dame una recomendación basada en esta descripción: ${busqueda}. Usa solo películas de este catálogo: ${peliculas.map(p => p.titulo).join(', ')}.`\n        })\n      });\n      const data = await res.json();\n      setRecomendacion(data.recomendacion); // Almacena la recomendación de la IA\n\n      // Filtra las películas que coincidan con la recomendación de la IA\n      const seleccionadas = peliculas.filter(p => data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase()));\n      if (seleccionadas.length > 0) {\n        setPeliculasFiltradas(seleccionadas); // Actualiza las películas filtradas\n      } else {\n        setPeliculasFiltradas([]); // Si no hay coincidencias, muestra una lista vacía\n      }\n    } catch (err) {\n      console.error('Error con IA:', err); // Manejo de errores en la llamada a la IA\n      setRecomendacion('Error al obtener recomendación de IA.');\n      setPeliculasFiltradas([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CineVerse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"buscador\",\n        onSubmit: handleBuscar,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por título o género',\n          value: busqueda,\n          onChange: e => setBusqueda(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), modoDescripcion ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleBuscarPorDescripcion,\n          children: \"Buscar con IA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setModoDescripcion(!modoDescripcion),\n          children: modoDescripcion ? 'Modo Tradicional' : 'Modo IA'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), recomendacion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bloque-recomendaciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"IA sugiere:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recomendacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando pel\\xEDculas...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this) : peliculasFiltradas.length > 0 ? peliculasFiltradas.map((p, i) => {\n        var _p$descripcion;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tarjeta\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: p.poster,\n            alt: p.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: p.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: p.genero\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [(_p$descripcion = p.descripcion) === null || _p$descripcion === void 0 ? void 0 : _p$descripcion.slice(0, 60), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No se encontraron pel\\xEDculas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UFVM6El8PhgitN+2iD4Ovd/PQfA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","peliculas","setPeliculas","peliculasFiltradas","setPeliculasFiltradas","busqueda","setBusqueda","modoDescripcion","setModoDescripcion","recomendacion","setRecomendacion","loading","setLoading","input","setInput","recomendacionIA","setRecomendacionIA","peliculasRecomendadas","setPeliculasRecomendadas","handleBuscarTexto","texto","toLowerCase","filtradas","filter","peli","titulo","includes","genero","startsWith","handleBuscarDescripcion","response","fetch","method","headers","body","JSON","stringify","prompt","map","p","join","data","json","textoIA","coincidencias","err","then","res","ok","Error","status","console","log","catch","error","finally","handleBuscar","e","preventDefault","resultado","handleBuscarPorDescripcion","seleccionadas","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","i","_p$descripcion","src","poster","alt","descripcion","slice","_c","$RefreshReg$"],"sources":["C:/AWS/CECYTEMDespliegue/Practica4_2/recomendaciones-ia/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n//4.1 *********************************************************\n//import React, { useState } from 'react';\nimport './App.css';\n//import peliculas from './data/peliculas.json';\n// ******************************************************************\n\nfunction App() {\n  // Estados del componente\n  const [peliculas, setPeliculas] = useState([]);\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n  const [busqueda, setBusqueda] = useState('');\n  const [modoDescripcion, setModoDescripcion] = useState(false);\n  const [recomendacion, setRecomendacion] = useState('');\n  const [loading, setLoading] = useState(true); // Nuevo estado para controlar la carga\n\n  //4.1 **************************************************************\nconst [input, setInput] = useState('');\n//const [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\nconst [recomendacionIA, setRecomendacionIA] = useState('');\nconst [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\nconst handleBuscarTexto = () => {\nconst texto = input.toLowerCase();\n\nconst filtradas = peliculas.filter((peli) =>\npeli.titulo.toLowerCase().includes(texto) ||\npeli.genero.toLowerCase().includes(texto) ||\npeli.titulo.toLowerCase().startsWith(texto)\n);\nsetPeliculasFiltradas(filtradas);\nsetPeliculasRecomendadas([]);\nsetRecomendacionIA('');\n};\n\nconst handleBuscarDescripcion = async () => {\nsetRecomendacionIA('Pensando...');\nsetPeliculasRecomendadas([]);\nsetPeliculasFiltradas([]);\ntry {\nconst response = await fetch('/api/recomendaciones', {\nmethod: 'POST',\nheaders: { 'Content-Type': 'application/json' },\nbody: JSON.stringify({\nprompt: `Tengo una base de datos con estas películas:\n${peliculas.map(p => p.titulo).join(', ')}.\nQuiero que me digas solo los títulos de las películas que coincidan con esta\ndescripción: \"${input}\".\nDevuélveme únicamente los títulos separados por comas.`\n}),\n});\nconst data = await response.json();\nconst textoIA = data.recomendacion.toLowerCase();\nsetRecomendacionIA(data.recomendacion);\n\nconst coincidencias = peliculas.filter((peli) =>\ntextoIA.includes(peli.titulo.toLowerCase())\n);\nsetPeliculasRecomendadas(coincidencias);\n} catch (err) {\nsetRecomendacionIA('❌ Error al obtener recomendación IA.');\n}\n};\n  //**************************************************************************\n\n  // Efecto para cargar las películas desde el backend al montar el componente\n  useEffect(() => {\n    setLoading(true); // Inicia el estado de carga\n    // Usamos la URL completa para asegurar la conexión al backend\n    fetch('http://localhost:4000/api/peliculas')\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP error! status: ${res.status}`);\n        }\n        return res.json();\n      })\n      .then(data => {\n        console.log('Películas obtenidas del backend:', data); // Log para depuración\n        setPeliculas(data);\n        setPeliculasFiltradas(data);\n      })\n      .catch(err => {\n        console.error('Error al obtener películas:', err); // Log de error\n        setPeliculas([]); // En caso de error, asegura que las listas estén vacías\n        setPeliculasFiltradas([]);\n      })\n      .finally(() => {\n        setLoading(false); // Finaliza el estado de carga\n      });\n  }, []); // El array de dependencias vacío asegura que se ejecute solo una vez al montar\n\n  // Función para manejar la búsqueda tradicional por título o género\n  const handleBuscar = (e) => {\n    e.preventDefault(); // Previene el comportamiento por defecto del formulario\n    const texto = busqueda.toLowerCase();\n    const resultado = peliculas.filter(p =>\n      p.titulo.toLowerCase().includes(texto) ||\n      p.genero.toLowerCase().includes(texto) ||\n      p.titulo.toLowerCase().startsWith(texto)\n    );\n    setPeliculasFiltradas(resultado);\n    setRecomendacion(''); // Limpia cualquier recomendación previa de IA\n  };\n\n  // Función para manejar la búsqueda por descripción usando la IA\n  const handleBuscarPorDescripcion = async () => {\n    try {\n      // Realiza una petición POST al endpoint de recomendaciones del backend\n      const res = await fetch('http://localhost:4000/api/recomendaciones', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        // Envía el prompt a la IA con la descripción del usuario y el catálogo de películas\n        body: JSON.stringify({ prompt: `Dame una recomendación basada en esta descripción: ${busqueda}. Usa solo películas de este catálogo: ${peliculas.map(p => p.titulo).join(', ')}.` })\n      });\n      const data = await res.json();\n      setRecomendacion(data.recomendacion); // Almacena la recomendación de la IA\n\n      // Filtra las películas que coincidan con la recomendación de la IA\n      const seleccionadas = peliculas.filter(p =>\n        data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())\n      );\n      if (seleccionadas.length > 0) {\n        setPeliculasFiltradas(seleccionadas); // Actualiza las películas filtradas\n      } else {\n        setPeliculasFiltradas([]); // Si no hay coincidencias, muestra una lista vacía\n      }\n    } catch (err) {\n      console.error('Error con IA:', err); // Manejo de errores en la llamada a la IA\n      setRecomendacion('Error al obtener recomendación de IA.');\n      setPeliculasFiltradas([]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>CineVerse</h1>\n      </header>\n      <nav className=\"navbar\">\n        <form className=\"buscador\" onSubmit={handleBuscar}>\n          <input\n            type=\"text\"\n            placeholder={modoDescripcion ?\n              'Describe la peli que buscas...' :\n              'Busca por título o género'}\n            value={busqueda}\n            onChange={e => setBusqueda(e.target.value)}\n          />\n          {\n          //Botones condicionales según el modo de búsqueda \n          }\n          {modoDescripcion ? (\n            <button type=\"button\" onClick={handleBuscarPorDescripcion}>\n              Buscar con IA\n            </button>\n          ) : (\n            <button type=\"submit\">Buscar</button>\n          )}\n          {\n          //Botón para alternar entre modo tradicional y modo IA \n          }\n          <button type=\"button\" onClick={() => setModoDescripcion(!modoDescripcion)}>\n            {modoDescripcion ? 'Modo Tradicional' : 'Modo IA'}\n          </button>\n        </form>\n      </nav>\n\n      {\n      //Bloque para mostrar la recomendación de la IA si existe \n      }\n      {recomendacion && (\n        <div className=\"bloque-recomendaciones\">\n          <h2>IA sugiere:</h2>\n          <p>{recomendacion}</p>\n        </div>\n      )}\n\n      <div className=\"grid\">\n        {loading ? (\n          <p>Cargando películas...</p>\n        ) : peliculasFiltradas.length > 0 ? (\n          peliculasFiltradas.map((p, i) => (\n            <div className=\"tarjeta\" key={i}>\n              <img src={p.poster} alt={p.titulo} />\n              <div className=\"info\">\n                <h3>{p.titulo}</h3>\n                <p>{p.genero}</p>\n                {\n                //Limita la descripción a 60 caracteres y añade \"...\" \n                }\n                <span>{p.descripcion?.slice(0, 60)}...</span>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No se encontraron películas.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}