{"ast":null,"code":"var _jsxFileName = \"C:\\\\AWS\\\\CECYTEMDespliegue\\\\Practica4_2\\\\recomendaciones-ia\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [peliculas, setPeliculas] = useState([]);\n  const [input, setInput] = useState('');\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n  const [recomendacionIA, setRecomendacionIA] = useState('');\n  const [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showMessageBox, setShowMessageBox] = useState(false);\n  const [messageBoxContent, setMessageBoxContent] = useState('');\n  const showMessage = message => {\n    setMessageBoxContent(message);\n    setShowMessageBox(true);\n    setTimeout(() => {\n      setShowMessageBox(false);\n      setMessageBoxContent('');\n    }, 3000);\n  };\n  useEffect(() => {\n    const fetchPeliculas = async () => {\n      try {\n        // *** CAMBIO AQUÍ: Usar puerto 4000 ***\n        const response = await fetch('http://localhost:4000/api/peliculas');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setPeliculas(data);\n        setPeliculasFiltradas(data);\n      } catch (err) {\n        console.error('Error al cargar películas desde el backend:', err);\n        setError('No se pudieron cargar las películas. Intenta de nuevo más tarde.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPeliculas();\n  }, []);\n  const handleBuscarTexto = () => {\n    setRecomendacionIA('');\n    setPeliculasRecomendadas([]);\n    setError(null);\n    setShowMessageBox(false);\n    const texto = input.toLowerCase();\n    if (!texto.trim()) {\n      showMessage('Por favor, ingresa texto para buscar.');\n      setPeliculasFiltradas(peliculas);\n      return;\n    }\n    const filtradas = peliculas.filter(peli => peli.titulo.toLowerCase().includes(texto) || peli.genero.toLowerCase().includes(texto) || peli.titulo.toLowerCase().startsWith(texto));\n    setPeliculasFiltradas(filtradas);\n  };\n  const handleBuscarDescripcion = async () => {\n    setRecomendacionIA('');\n    setPeliculasRecomendadas([]);\n    setPeliculasFiltradas([]);\n    setError(null);\n    setShowMessageBox(false);\n    if (!input.trim()) {\n      showMessage('Por favor, proporciona una descripción detallada para la IA.');\n      return;\n    }\n    setRecomendacionIA('Pensando...');\n    try {\n      // *** CAMBIO AQUÍ: Usar puerto 4000 ***\n      const response = await fetch('http://localhost:4000/api/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: `Tengo una base de datos con estas películas:\n                    ${peliculas.map(p => p.titulo).join(', ')}.\n                    Quiero que me digas solo los títulos de las películas que coincidan con esta\n                    descripción: \"${input}\".\n                    Devuélveme únicamente los títulos separados por comas.`\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const textoIA = data.recomendacion.toLowerCase();\n      setRecomendacionIA(data.recomendacion);\n      const coincidencias = peliculas.filter(peli => textoIA.includes(peli.titulo.toLowerCase()));\n      setPeliculasRecomendadas(coincidencias);\n    } catch (err) {\n      console.error('Error al obtener recomendación IA:', err);\n      setRecomendacionIA('❌ Error al obtener recomendación IA.');\n      setError(`Error: ${err.message}. Asegúrate de que el backend esté funcionando.`);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"titulo\",\n        children: \"Cargando pel\\xEDculas...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 16\n    }, this);\n  }\n  if (error && !loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"titulo\",\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Recargar p\\xE1gina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"CECYFLIX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buscador\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\xBFQu\\xE9 te gustar\\xEDa ver hoy?\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBuscarTexto,\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBuscarDescripcion,\n        className: \"btn-ia\",\n        children: \"Buscar por descripci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), showMessageBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: messageBoxContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this), recomendacionIA && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bloque-recomendaciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u2728 Recomendaci\\xF3n IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recomendacionIA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), peliculasRecomendadas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"galeria\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF9E Pel\\xEDculas recomendadas por IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: peliculasRecomendadas.map(peli => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tarjeta\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: peli.poster,\n            alt: peli.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: peli.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: peli.descripcion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: peli.genero\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this)]\n        }, peli.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }, this), peliculasFiltradas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"galeria\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFAC Todas las pel\\xEDculas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: peliculasFiltradas.map(peli => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tarjeta\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: peli.poster,\n            alt: peli.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: peli.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: peli.descripcion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: peli.genero\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this)]\n        }, peli.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), !loading && peliculasFiltradas.length === 0 && peliculasRecomendadas.length === 0 && !recomendacionIA && input && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-results\",\n      children: [\"No se encontraron pel\\xEDculas para \\\"\", input, \"\\\". Intenta otra b\\xFAsqueda.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), !loading && peliculas.length === 0 && !input && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-results\",\n      children: \"No hay pel\\xEDculas disponibles. Aseg\\xFArate de que los datos est\\xE9n en MongoDB Atlas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"3prc8BsLpKOQMNPIbA7w/Lzcllg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","peliculas","setPeliculas","input","setInput","peliculasFiltradas","setPeliculasFiltradas","recomendacionIA","setRecomendacionIA","peliculasRecomendadas","setPeliculasRecomendadas","loading","setLoading","error","setError","showMessageBox","setShowMessageBox","messageBoxContent","setMessageBoxContent","showMessage","message","setTimeout","fetchPeliculas","response","fetch","ok","Error","status","data","json","err","console","handleBuscarTexto","texto","toLowerCase","trim","filtradas","filter","peli","titulo","includes","genero","startsWith","handleBuscarDescripcion","method","headers","body","JSON","stringify","prompt","map","p","join","errorData","textoIA","recomendacion","coincidencias","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","type","placeholder","value","onChange","e","target","length","src","poster","alt","descripcion","id","_c","$RefreshReg$"],"sources":["C:/AWS/CECYTEMDespliegue/Practica4_2/recomendaciones-ia/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [peliculas, setPeliculas] = useState([]);\n    const [input, setInput] = useState('');\n    const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n    const [recomendacionIA, setRecomendacionIA] = useState('');\n    const [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [showMessageBox, setShowMessageBox] = useState(false);\n    const [messageBoxContent, setMessageBoxContent] = useState('');\n\n    const showMessage = (message) => {\n        setMessageBoxContent(message);\n        setShowMessageBox(true);\n        setTimeout(() => {\n            setShowMessageBox(false);\n            setMessageBoxContent('');\n        }, 3000);\n    };\n\n    useEffect(() => {\n        const fetchPeliculas = async () => {\n            try {\n                // *** CAMBIO AQUÍ: Usar puerto 4000 ***\n                const response = await fetch('http://localhost:4000/api/peliculas');\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                setPeliculas(data);\n                setPeliculasFiltradas(data);\n            } catch (err) {\n                console.error('Error al cargar películas desde el backend:', err);\n                setError('No se pudieron cargar las películas. Intenta de nuevo más tarde.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchPeliculas();\n    }, []);\n\n    const handleBuscarTexto = () => {\n        setRecomendacionIA('');\n        setPeliculasRecomendadas([]);\n        setError(null);\n        setShowMessageBox(false);\n\n        const texto = input.toLowerCase();\n        if (!texto.trim()) {\n            showMessage('Por favor, ingresa texto para buscar.');\n            setPeliculasFiltradas(peliculas);\n            return;\n        }\n\n        const filtradas = peliculas.filter((peli) =>\n            peli.titulo.toLowerCase().includes(texto) ||\n            peli.genero.toLowerCase().includes(texto) ||\n            peli.titulo.toLowerCase().startsWith(texto)\n        );\n        setPeliculasFiltradas(filtradas);\n    };\n\n    const handleBuscarDescripcion = async () => {\n        setRecomendacionIA('');\n        setPeliculasRecomendadas([]);\n        setPeliculasFiltradas([]);\n        setError(null);\n        setShowMessageBox(false);\n\n        if (!input.trim()) {\n            showMessage('Por favor, proporciona una descripción detallada para la IA.');\n            return;\n        }\n\n        setRecomendacionIA('Pensando...');\n        try {\n            // *** CAMBIO AQUÍ: Usar puerto 4000 ***\n            const response = await fetch('http://localhost:4000/api/recomendaciones', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    prompt: `Tengo una base de datos con estas películas:\n                    ${peliculas.map(p => p.titulo).join(', ')}.\n                    Quiero que me digas solo los títulos de las películas que coincidan con esta\n                    descripción: \"${input}\".\n                    Devuélveme únicamente los títulos separados por comas.`\n                }),\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            const textoIA = data.recomendacion.toLowerCase();\n            setRecomendacionIA(data.recomendacion);\n\n            const coincidencias = peliculas.filter((peli) =>\n                textoIA.includes(peli.titulo.toLowerCase())\n            );\n            setPeliculasRecomendadas(coincidencias);\n        } catch (err) {\n            console.error('Error al obtener recomendación IA:', err);\n            setRecomendacionIA('❌ Error al obtener recomendación IA.');\n            setError(`Error: ${err.message}. Asegúrate de que el backend esté funcionando.`);\n        }\n    };\n\n    if (loading) {\n        return <div className=\"App\"><h1 className=\"titulo\">Cargando películas...</h1></div>;\n    }\n\n    if (error && !loading) {\n        return (\n            <div className=\"App\">\n                <h1 className=\"titulo\">Error</h1>\n                <p className=\"error-message\">{error}</p>\n                <button onClick={() => window.location.reload()}>Recargar página</button>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"titulo\">CECYFLIX</h1>\n            <div className=\"buscador\">\n                <input\n                    type=\"text\"\n                    placeholder=\"¿Qué te gustaría ver hoy?\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                />\n                <button onClick={handleBuscarTexto}>Buscar</button>\n                <button onClick={handleBuscarDescripcion} className=\"btn-ia\">\n                    Buscar por descripción\n                </button>\n            </div>\n\n            {showMessageBox && (\n                <div className=\"message-box\">\n                    <p>{messageBoxContent}</p>\n                </div>\n            )}\n\n            {recomendacionIA && (\n                <div className=\"bloque-recomendaciones\">\n                    <h2>✨ Recomendación IA</h2>\n                    <p>{recomendacionIA}</p>\n                </div>\n            )}\n\n            {peliculasRecomendadas.length > 0 && (\n                <div className=\"galeria\">\n                    <h2>🎞 Películas recomendadas por IA</h2>\n                    <div className=\"grid\">\n                        {peliculasRecomendadas.map((peli) => (\n                            <div className=\"tarjeta\" key={peli.id}>\n                                <img src={peli.poster} alt={peli.titulo} />\n                                <div className=\"info\">\n                                    <h3>{peli.titulo}</h3>\n                                    <p>{peli.descripcion}</p>\n                                    <span>{peli.genero}</span>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            {peliculasFiltradas.length > 0 && (\n                <div className=\"galeria\">\n                    <h2>🎬 Todas las películas</h2>\n                    <div className=\"grid\">\n                        {peliculasFiltradas.map((peli) => (\n                            <div className=\"tarjeta\" key={peli.id}>\n                                <img src={peli.poster} alt={peli.titulo} />\n                                <div className=\"info\">\n                                    <h3>{peli.titulo}</h3>\n                                    <p>{peli.descripcion}</p>\n                                    <span>{peli.genero}</span>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            {!loading && peliculasFiltradas.length === 0 && peliculasRecomendadas.length === 0 && !recomendacionIA && input && (\n                <p className=\"no-results\">No se encontraron películas para \"{input}\". Intenta otra búsqueda.</p>\n            )}\n            {!loading && peliculas.length === 0 && !input && (\n                <p className=\"no-results\">No hay películas disponibles. Asegúrate de que los datos estén en MongoDB Atlas.</p>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}