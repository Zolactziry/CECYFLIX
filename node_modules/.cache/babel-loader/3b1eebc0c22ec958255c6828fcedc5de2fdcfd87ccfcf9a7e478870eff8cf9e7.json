{"ast":null,"code":"var _jsxFileName = \"C:\\\\AWS\\\\CECYTEMDespliegue\\\\Practica4_1\\\\recomendaciones-ia\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\nimport './App.css';\nimport peliculas from './data/peliculas.json';\nfunction App() {\n  const [input, setInput] = useState('');\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\n  const [recomendacionIA, setRecomendacionIA] = useState('');\n  const [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\n  \n  const handleBuscarTexto = () => {\n    const texto = input.toLowerCase();\n\n    const filtradas = peliculas.filter((peli) =>\n      peli.titulo.toLowerCase().includes(texto) ||\n      peli.genero.toLowerCase().includes(texto) ||\n      peli.titulo.toLowerCase().startsWith(texto)\n    );\n\n    setPeliculasFiltradas(filtradas);\n    setPeliculasRecomendadas([]);\n    setRecomendacionIA('');\n  };\n  const handleBuscarDescripcion = async () => {\n    setRecomendacionIA('Pensando...');\n    setPeliculasRecomendadas([]);\n    setPeliculasFiltradas([]);\n    try {\n      const response = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          prompt: `Tengo una base de datos con estas pel√≠culas: ${peliculas.map(p => p.titulo).join(', ')}. Quiero que me digas solo los t√≠tulos de las pel√≠culas que coincidan con esta descripci√≥n: \"${input}\". Devu√©lveme √∫nicamente los t√≠tulos separados por comas.`\n      }),\n    });\n\n    const data = await response.json();\n    const textoIA = data.recomendacion.toLowerCase();\n    setRecomendacionIA(data.recomendacion);\n\n    const coincidencias = peliculas.filter((peli) => \n      textoIA.includes(peli.titulo.toLowerCase())\n    );\n    \n    setPeliculasRecomendadas(coincidencias);\n  } catch (err) {\n    setRecomendacionIA('‚ùå Error al obtener recomendaci√≥n IA.');\n  }\n};\n\nreturn (\n  <div className=\"App\">\n    <h1 className=\"titulo\">CECYFLIX</h1>\n    <div className=\"buscador\">\n      <input\n        type=\"text\"\n        placeholder=\"¬øQu√© te gustar√≠a ver hoy?\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        required\n      />\n      <button onClick={handleBuscarTexto}>Buscar</button>\n      <button onClick={handleBuscarDescripcion} className=\"btn-ia\">\n      Buscar por descripci√≥n</button>\n  </div>\n  \n  {recomendacionIA && (\n    <div className=\"bloque-recomendaciones\">\n      <h2>‚ú® Recomendaci√≥n IA</h2>\n      <p>{recomendacionIA}</p>\n    </div>\n  )}\n\n  {peliculasRecomendadas.length > 0 && (\n    <div className=\"galeria\">\n      <h2>üéû Pel√≠culas recomendadas por IA</h2>\n      <div className=\"grid\">\n        {peliculasRecomendadas.map((peli) => (\n          <div className=\"tarjeta\" key={peli.id}>\n            <img src={peli.poster} alt={peli.titulo} />\n            <div className=\"info\">\n              <h3>{peli.titulo}</h3>\n              <p>{peli.descripcion}</p>\n              <span>{peli.genero}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )}\n\n      {peliculasFiltradas.length > 0 && (\n        <div className=\"galeria\">\n          <h2>üé¨ Todas las pel√≠culas</h2>\n          <div className=\"grid\">\n            {peliculasFiltradas.map((peli) => (\n              <div className=\"tarjeta\" key={peli.id}>\n                <img src={peli.poster} alt={peli.titulo} />\n                <div className=\"info\">\n                  <h3>{peli.titulo}</h3>\n                  <p>{peli.descripcion}</p>\n                  <span>{peli.genero}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default App;*/\n\n/*\nconst [peliculas, setPeliculas] = useState([]);\nconst [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\nconst [busqueda, setBusqueda] = useState('');\nconst [modoDescripcion, setModoDescripcion] = useState(false);\nconst [recomendacion, setRecomendacion] = useState('');\n\nuseEffect(() => {\n  fetch('/api/peliculas')\n    .then(res => res.json())\n    .then(data => {\n      setPeliculas(data);\n      setPeliculasFiltradas(data);\n    })\n    .catch(err => console.error('Error al obtener pel√≠culas:', err));\n}, []);\n\nconst handleBuscar = (e) => {\n  e.preventDefault();\n  const texto = busqueda.toLowerCase();\n  const resultado = peliculas.filter(p =>\n    p.titulo.toLowerCase().includes(texto) ||\n    p.genero.toLowerCase().includes(texto) ||\n    p.titulo.toLowerCase().startsWith(texto)\n  );\n  setPeliculasFiltradas(resultado);\n  setRecomendacion('');\n};\n\nconst handleBuscarPorDescripcion = async () => {\n  try {\n    const res = await fetch('/api/recomendaciones', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ prompt: `Dame una recomendaci√≥n basada en esta descripci√≥n:\n      ${busqueda}. Usa solo pel√≠culas de este cat√°logo:\n      ${peliculas.map(p => p.titulo).join(', ')}.` })\n    });\n    const data = await res.json();\n    setRecomendacion(data.recomendacion);\n    const seleccionadas = peliculas.filter(p =>\n      data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())\n   );\n   if (seleccionadas.length > 0) {\n     setPeliculasFiltradas(seleccionadas);\n   }\n  } catch (err) {\n   console.error('Error con IA:', err);\n  }\n};\n\n<form className=\"buscador\" onSubmit={handleBuscar}>\n  <input\n    type=\"text\"\n    placeholder={modoDescripcion ? 'Describe la peli que buscas...' :\n      'Busca por t√≠tulo o g√©nero'}\n    value={busqueda}\n    onChange={e => setBusqueda(e.target.value)}\n  />\n  {/* Botones condicionales seg√∫n el modo */ //} \n/*\n</form>\n{recomendacion && (\n<div className=\"bloque-recomendaciones\">\n  <h2>IA sugiere:</h2>\n  <p>{recomendacion}</p>\n</div>\n)}\n<div className=\"grid\">\n{peliculasFiltradas.map((p, i) => (\n  <div className=\"tarjeta\" key={i}>\n    <img src={p.poster} alt={p.titulo} />\n    <div className=\"info\">\n      <h3>{p.titulo}</h3>\n      <p>{p.genero}</p>\n      <span>{p.descripcion?.slice(0, 60)}...</span>\n    </div>\n  </div>\n))}\n</div>*/\n\nimport React, { useState, useEffect } from 'react'; // Aseg√∫rate de importar React y los Hooks\nimport './App.css'; // Si tienes un archivo CSS para tu App\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Define App como un componente funcional\n  // Estados del componente, como se describe en el documento\n  const [peliculas, setPeliculas] = useState([]); //[cite: 310]\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]); //[cite: 311]\n  const [busqueda, setBusqueda] = useState(''); //[cite: 312]\n  const [modoDescripcion, setModoDescripcion] = useState(false); //[cite: 313]\n  const [recomendacion, setRecomendacion] = useState(''); //[cite: 314]\n\n  // Efecto secundario para cargar las pel√≠culas, como se describe en el documento\n  useEffect(() => {\n    //[cite: 315]\n    fetch('/api/peliculas').then(res => res.json()).then(data => {\n      setPeliculas(data); //[cite: 316]\n      setPeliculasFiltradas(data); //[cite: 316]\n    }).catch(err => console.error('Error al obtener pel√≠culas:', err)); //[cite: 315]\n  }, []); // El array de dependencias vac√≠o asegura que se ejecuta solo al montar [cite: 316]\n\n  // Funciones de b√∫squeda, como se describen en el documento\n  const handleBuscar = e => {\n    //[cite: 317]\n    e.preventDefault();\n    const texto = busqueda.toLowerCase();\n    const resultado = peliculas.filter(p => p.titulo.toLowerCase().includes(texto) || p.genero.toLowerCase().includes(texto) || p.titulo.toLowerCase().startsWith(texto)); //[cite: 318]\n    setPeliculasFiltradas(resultado); //[cite: 318]\n    setRecomendacion(''); //[cite: 318]\n  };\n  const handleBuscarPorDescripcion = async () => {\n    //[cite: 319]\n    try {\n      const res = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: `Dame una recomendaci√≥n basada en esta descripci√≥n: ${busqueda}. Usa solo pel√≠culas de este cat√°logo: ${peliculas.map(p => p.titulo).join(', ')}.`\n        })\n      });\n      const data = await res.json(); //[cite: 320]\n      setRecomendacion(data.recomendacion); //[cite: 320]\n      const seleccionadas = peliculas.filter(p => data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())); //[cite: 320]\n      if (seleccionadas.length > 0) {\n        //[cite: 321]\n        setPeliculasFiltradas(seleccionadas); //[cite: 321]\n      }\n    } catch (err) {\n      console.error('Error con IA:', err); //[cite: 321]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CineVerse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"buscador\",\n      onSubmit: handleBuscar,\n      children: [\" //[cite: 326]\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por t√≠tulo o g√©nero' //[cite: 327]\n        ,\n        value: busqueda,\n        onChange: e => setBusqueda(e.target.value) //[cite: 327]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), recomendacion &&\n    /*#__PURE__*/\n    //[cite: 327]\n    _jsxDEV(\"div\", {\n      className: \"bloque-recomendaciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"IA sugiere:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recomendacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: peliculasFiltradas.map((p, i) => {\n        var _p$descripcion;\n        return (\n          /*#__PURE__*/\n          //[cite: 327]\n          _jsxDEV(\"div\", {\n            className: \"tarjeta\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: p.poster,\n              alt: p.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: p.titulo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: p.genero\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [(_p$descripcion = p.descripcion) === null || _p$descripcion === void 0 ? void 0 : _p$descripcion.slice(0, 60), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 13\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 11\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7dl2JW6kaHNERAH9j0sOGRRFNCk=\");\n_c = App;\nexport default App; // Exporta App como el componente por defecto\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","peliculas","setPeliculas","peliculasFiltradas","setPeliculasFiltradas","busqueda","setBusqueda","modoDescripcion","setModoDescripcion","recomendacion","setRecomendacion","fetch","then","res","json","data","catch","err","console","error","handleBuscar","e","preventDefault","texto","toLowerCase","resultado","filter","p","titulo","includes","genero","startsWith","handleBuscarPorDescripcion","method","headers","body","JSON","stringify","prompt","map","join","seleccionadas","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","i","_p$descripcion","src","poster","alt","descripcion","slice","_c","$RefreshReg$"],"sources":["C:/AWS/CECYTEMDespliegue/Practica4_1/recomendaciones-ia/src/App.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport './App.css';\nimport peliculas from './data/peliculas.json';\nfunction App() {\n  const [input, setInput] = useState('');\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\n  const [recomendacionIA, setRecomendacionIA] = useState('');\n  const [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\n  \n  const handleBuscarTexto = () => {\n    const texto = input.toLowerCase();\n\n    const filtradas = peliculas.filter((peli) =>\n      peli.titulo.toLowerCase().includes(texto) ||\n      peli.genero.toLowerCase().includes(texto) ||\n      peli.titulo.toLowerCase().startsWith(texto)\n    );\n\n    setPeliculasFiltradas(filtradas);\n    setPeliculasRecomendadas([]);\n    setRecomendacionIA('');\n  };\n  const handleBuscarDescripcion = async () => {\n    setRecomendacionIA('Pensando...');\n    setPeliculasRecomendadas([]);\n    setPeliculasFiltradas([]);\n    try {\n      const response = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          prompt: `Tengo una base de datos con estas pel√≠culas: ${peliculas.map(p => p.titulo).join(', ')}. Quiero que me digas solo los t√≠tulos de las pel√≠culas que coincidan con esta descripci√≥n: \"${input}\". Devu√©lveme √∫nicamente los t√≠tulos separados por comas.`\n      }),\n    });\n\n    const data = await response.json();\n    const textoIA = data.recomendacion.toLowerCase();\n    setRecomendacionIA(data.recomendacion);\n\n    const coincidencias = peliculas.filter((peli) => \n      textoIA.includes(peli.titulo.toLowerCase())\n    );\n    \n    setPeliculasRecomendadas(coincidencias);\n  } catch (err) {\n    setRecomendacionIA('‚ùå Error al obtener recomendaci√≥n IA.');\n  }\n};\n\nreturn (\n  <div className=\"App\">\n    <h1 className=\"titulo\">CECYFLIX</h1>\n    <div className=\"buscador\">\n      <input\n        type=\"text\"\n        placeholder=\"¬øQu√© te gustar√≠a ver hoy?\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        required\n      />\n      <button onClick={handleBuscarTexto}>Buscar</button>\n      <button onClick={handleBuscarDescripcion} className=\"btn-ia\">\n      Buscar por descripci√≥n</button>\n  </div>\n  \n  {recomendacionIA && (\n    <div className=\"bloque-recomendaciones\">\n      <h2>‚ú® Recomendaci√≥n IA</h2>\n      <p>{recomendacionIA}</p>\n    </div>\n  )}\n\n  {peliculasRecomendadas.length > 0 && (\n    <div className=\"galeria\">\n      <h2>üéû Pel√≠culas recomendadas por IA</h2>\n      <div className=\"grid\">\n        {peliculasRecomendadas.map((peli) => (\n          <div className=\"tarjeta\" key={peli.id}>\n            <img src={peli.poster} alt={peli.titulo} />\n            <div className=\"info\">\n              <h3>{peli.titulo}</h3>\n              <p>{peli.descripcion}</p>\n              <span>{peli.genero}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )}\n\n      {peliculasFiltradas.length > 0 && (\n        <div className=\"galeria\">\n          <h2>üé¨ Todas las pel√≠culas</h2>\n          <div className=\"grid\">\n            {peliculasFiltradas.map((peli) => (\n              <div className=\"tarjeta\" key={peli.id}>\n                <img src={peli.poster} alt={peli.titulo} />\n                <div className=\"info\">\n                  <h3>{peli.titulo}</h3>\n                  <p>{peli.descripcion}</p>\n                  <span>{peli.genero}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default App;*/\n\n/*\nconst [peliculas, setPeliculas] = useState([]);\nconst [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\nconst [busqueda, setBusqueda] = useState('');\nconst [modoDescripcion, setModoDescripcion] = useState(false);\nconst [recomendacion, setRecomendacion] = useState('');\n\nuseEffect(() => {\n  fetch('/api/peliculas')\n    .then(res => res.json())\n    .then(data => {\n      setPeliculas(data);\n      setPeliculasFiltradas(data);\n    })\n    .catch(err => console.error('Error al obtener pel√≠culas:', err));\n}, []);\n\nconst handleBuscar = (e) => {\n  e.preventDefault();\n  const texto = busqueda.toLowerCase();\n  const resultado = peliculas.filter(p =>\n    p.titulo.toLowerCase().includes(texto) ||\n    p.genero.toLowerCase().includes(texto) ||\n    p.titulo.toLowerCase().startsWith(texto)\n  );\n  setPeliculasFiltradas(resultado);\n  setRecomendacion('');\n};\n\nconst handleBuscarPorDescripcion = async () => {\n  try {\n    const res = await fetch('/api/recomendaciones', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ prompt: `Dame una recomendaci√≥n basada en esta descripci√≥n:\n      ${busqueda}. Usa solo pel√≠culas de este cat√°logo:\n      ${peliculas.map(p => p.titulo).join(', ')}.` })\n    });\n    const data = await res.json();\n    setRecomendacion(data.recomendacion);\n    const seleccionadas = peliculas.filter(p =>\n      data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())\n   );\n   if (seleccionadas.length > 0) {\n     setPeliculasFiltradas(seleccionadas);\n   }\n  } catch (err) {\n   console.error('Error con IA:', err);\n  }\n};\n\n<form className=\"buscador\" onSubmit={handleBuscar}>\n  <input\n    type=\"text\"\n    placeholder={modoDescripcion ? 'Describe la peli que buscas...' :\n      'Busca por t√≠tulo o g√©nero'}\n    value={busqueda}\n    onChange={e => setBusqueda(e.target.value)}\n  />\n  {/* Botones condicionales seg√∫n el modo *///} \n  /*\n</form>\n\n{recomendacion && (\n  <div className=\"bloque-recomendaciones\">\n    <h2>IA sugiere:</h2>\n    <p>{recomendacion}</p>\n  </div>\n)}\n\n<div className=\"grid\">\n  {peliculasFiltradas.map((p, i) => (\n    <div className=\"tarjeta\" key={i}>\n      <img src={p.poster} alt={p.titulo} />\n      <div className=\"info\">\n        <h3>{p.titulo}</h3>\n        <p>{p.genero}</p>\n        <span>{p.descripcion?.slice(0, 60)}...</span>\n      </div>\n    </div>\n  ))}\n</div>*/\n\n\nimport React, { useState, useEffect } from 'react'; // Aseg√∫rate de importar React y los Hooks\nimport './App.css'; // Si tienes un archivo CSS para tu App\n\nfunction App() { // Define App como un componente funcional\n  // Estados del componente, como se describe en el documento\n  const [peliculas, setPeliculas] = useState([]); //[cite: 310]\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]); //[cite: 311]\n  const [busqueda, setBusqueda] = useState(''); //[cite: 312]\n  const [modoDescripcion, setModoDescripcion] = useState(false); //[cite: 313]\n  const [recomendacion, setRecomendacion] = useState(''); //[cite: 314]\n\n  // Efecto secundario para cargar las pel√≠culas, como se describe en el documento\n  useEffect(() => { //[cite: 315]\n    fetch('/api/peliculas')\n      .then(res => res.json())\n      .then(data => {\n        setPeliculas(data); //[cite: 316]\n        setPeliculasFiltradas(data); //[cite: 316]\n      })\n      .catch(err => console.error('Error al obtener pel√≠culas:', err)); //[cite: 315]\n  }, []); // El array de dependencias vac√≠o asegura que se ejecuta solo al montar [cite: 316]\n\n  // Funciones de b√∫squeda, como se describen en el documento\n  const handleBuscar = (e) => { //[cite: 317]\n    e.preventDefault();\n    const texto = busqueda.toLowerCase();\n    const resultado = peliculas.filter(p =>\n      p.titulo.toLowerCase().includes(texto) ||\n      p.genero.toLowerCase().includes(texto) ||\n      p.titulo.toLowerCase().startsWith(texto)\n    ); //[cite: 318]\n    setPeliculasFiltradas(resultado); //[cite: 318]\n    setRecomendacion(''); //[cite: 318]\n  };\n\n  const handleBuscarPorDescripcion = async () => { //[cite: 319]\n    try {\n      const res = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: `Dame una recomendaci√≥n basada en esta descripci√≥n: ${busqueda}. Usa solo pel√≠culas de este cat√°logo: ${peliculas.map(p => p.titulo).join(', ')}.` })\n      });\n      const data = await res.json(); //[cite: 320]\n      setRecomendacion(data.recomendacion); //[cite: 320]\n      const seleccionadas = peliculas.filter(p =>\n        data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())\n      ); //[cite: 320]\n      if (seleccionadas.length > 0) { //[cite: 321]\n        setPeliculasFiltradas(seleccionadas); //[cite: 321]\n      }\n    } catch (err) {\n      console.error('Error con IA:', err); //[cite: 321]\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>CineVerse</h1>\n      <form className=\"buscador\" onSubmit={handleBuscar}> //[cite: 326]\n        <input\n          type=\"text\"\n          placeholder={modoDescripcion ? 'Describe la peli que buscas...' : \n            'Busca por t√≠tulo o g√©nero'} //[cite: 327]\n          value={busqueda}\n          onChange={e => setBusqueda(e.target.value)} //[cite: 327]\n        />\n        {/* Aqu√≠ puedes a√±adir los botones condicionales seg√∫n el modo, como se describe en el documento */}\n      </form>\n      {recomendacion && ( //[cite: 327]\n        <div className=\"bloque-recomendaciones\">\n          <h2>IA sugiere:</h2>\n          <p>{recomendacion}</p>\n        </div>\n      )}\n      <div className=\"grid\">\n        {peliculasFiltradas.map((p, i) => ( //[cite: 327]\n          <div className=\"tarjeta\" key={i}>\n            <img src={p.poster} alt={p.titulo} /> \n            <div className=\"info\">\n              <h3>{p.titulo}</h3> \n              <p>{p.genero}</p> \n              <span>{p.descripcion?.slice(0, 60)}...</span> \n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App; // Exporta App como el componente por defecto"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}