{"ast":null,"code":"var _jsxFileName = \"C:\\\\AWS\\\\CECYTEMDespliegue\\\\Practica4_2\\\\recomendaciones-ia\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n//4.1 *********************************************************\n//import React, { useState } from 'react';\n//import './App.css';\n//import peliculas from './data/peliculas.json';\n// ******************************************************************\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estados del componente\n  const [peliculas, setPeliculas] = useState([]);\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n  const [busqueda, setBusqueda] = useState('');\n  const [modoDescripcion, setModoDescripcion] = useState(false);\n  const [recomendacion, setRecomendacion] = useState('');\n  const [loading, setLoading] = useState(true); // Nuevo estado para controlar la carga\n\n  //4.1 **************************************************************\n  //const [input, setInput] = useState('');\n  //const [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\n  //const [recomendacionIA, setRecomendacionIA] = useState('');\n  const [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\n  //const handleBuscarTexto = () => {\n  //const texto = input.toLowerCase();\n\n  //const filtradas = peliculas.filter((peli) =>\n  //peli.titulo.toLowerCase().includes(texto) ||\n  //peli.genero.toLowerCase().includes(texto) ||\n  //peli.titulo.toLowerCase().startsWith(texto)\n  //);\n  //setPeliculasFiltradas(filtradas);\n  //setPeliculasRecomendadas([]);\n  //setRecomendacionIA('');\n  //};\n\n  //const handleBuscarDescripcion = async () => {\n  //setRecomendacionIA('Pensando...');\n  //setPeliculasRecomendadas([]);\n  //setPeliculasFiltradas([]);\n  //try {\n  //const response = await fetch('/api/recomendaciones', {\n  //method: 'POST',\n  //headers: { 'Content-Type': 'application/json' },\n  //body: JSON.stringify({\n  //prompt: `Tengo una base de datos con estas películas:\n  //${peliculas.map(p => p.titulo).join(', ')}.\n  //Quiero que me digas solo los títulos de las películas que coincidan con esta\n  //descripción: \"${input}\".\n  //Devuélveme únicamente los títulos separados por comas.`\n  //}),\n  //});\n  //const data = await response.json();\n  //const textoIA = data.recomendacion.toLowerCase();\n  //setRecomendacionIA(data.recomendacion);\n\n  //const coincidencias = peliculas.filter((peli) =>\n  //textoIA.includes(peli.titulo.toLowerCase())\n  //);\n  //setPeliculasRecomendadas(coincidencias);\n  //} catch (err) {\n  //setRecomendacionIA('❌ Error al obtener recomendación IA.');\n  //}\n  //};\n  //**************************************************************************\n\n  // Efecto para cargar las películas desde el backend al montar el componente\n  useEffect(() => {\n    setLoading(true); // Inicia el estado de carga\n    // Usamos la URL completa para asegurar la conexión al backend\n    fetch('http://localhost:4000/api/peliculas').then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      console.log('Películas obtenidas del backend:', data); // Log para depuración\n      setPeliculas(data);\n      setPeliculasFiltradas(data);\n    }).catch(err => {\n      console.error('Error al obtener películas:', err); // Log de error\n      setPeliculas([]); // En caso de error, asegura que las listas estén vacías\n      setPeliculasFiltradas([]);\n    }).finally(() => {\n      setLoading(false); // Finaliza el estado de carga\n    });\n  }, []); // El array de dependencias vacío asegura que se ejecute solo una vez al montar\n\n  // Función para manejar la búsqueda tradicional por título o género\n  const handleBuscar = e => {\n    e.preventDefault(); // Previene el comportamiento por defecto del formulario\n    const texto = busqueda.toLowerCase();\n    const resultado = peliculas.filter(p => p.titulo.toLowerCase().includes(texto) || p.genero.toLowerCase().includes(texto) || p.titulo.toLowerCase().startsWith(texto));\n    setPeliculasFiltradas(resultado);\n    setRecomendacion(''); // Limpia cualquier recomendación previa de IA\n  };\n\n  // Función para manejar la búsqueda por descripción usando la IA\n  const handleBuscarPorDescripcion = async () => {\n    try {\n      // Realiza una petición POST al endpoint de recomendaciones del backend\n      const res = await fetch('http://localhost:4000/api/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // Envía el prompt a la IA con la descripción del usuario y el catálogo de películas\n        body: JSON.stringify({\n          prompt: `Dame una recomendación basada en esta descripción: ${busqueda}. Usa solo películas de este catálogo: ${peliculas.map(p => p.titulo).join(', ')}.`\n        })\n      });\n      const data = await res.json();\n      setRecomendacion(data.recomendacion); // Almacena la recomendación de la IA\n\n      // Filtra las películas que coincidan con la recomendación de la IA\n      const seleccionadas = peliculas.filter(p => data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase()));\n      if (seleccionadas.length > 0) {\n        setPeliculasFiltradas(seleccionadas); // Actualiza las películas filtradas\n      } else {\n        setPeliculasFiltradas([]); // Si no hay coincidencias, muestra una lista vacía\n      }\n    } catch (err) {\n      console.error('Error con IA:', err); // Manejo de errores en la llamada a la IA\n      setRecomendacion('Error al obtener recomendación de IA.');\n      setPeliculasFiltradas([]);\n    }\n  };\n\n  /*\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>CineVerse</h1>\n      </header>\n      <nav className=\"navbar\">\n        <form className=\"buscador\" onSubmit={handleBuscar}>\n          <input\n            type=\"text\"\n            placeholder={modoDescripcion ?\n              'Describe la peli que buscas...' :\n              'Busca por título o género'}\n            value={busqueda}\n            onChange={e => setBusqueda(e.target.value)}\n          />\n          {\n          //Botones condicionales según el modo de búsqueda \n          }\n          {modoDescripcion ? (\n            <button type=\"button\" onClick={handleBuscarPorDescripcion}>\n              Buscar con IA\n            </button>\n          ) : (\n            <button type=\"submit\">Buscar</button>\n          )}\n          {\n          //Botón para alternar entre modo tradicional y modo IA \n          }\n          <button type=\"button\" onClick={() => setModoDescripcion(!modoDescripcion)}>\n            {modoDescripcion ? 'Modo Tradicional' : 'Modo IA'}\n          </button>\n        </form>\n      </nav>\n       {\n      //Bloque para mostrar la recomendación de la IA si existe \n      }\n      {recomendacion && (\n        <div className=\"bloque-recomendaciones\">\n          <h2>IA sugiere:</h2>\n          <p>{recomendacion}</p>\n        </div>\n      )}\n       <div className=\"grid\">\n        {loading ? (\n          <p>Cargando películas...</p>\n        ) : peliculasFiltradas.length > 0 ? (\n          peliculasFiltradas.map((p, i) => (\n            <div className=\"tarjeta\" key={i}>\n              <img src={p.poster} alt={p.titulo} />\n              <div className=\"info\">\n                <h3>{p.titulo}</h3>\n                <p>{p.genero}</p>\n                {\n                //Limita la descripción a 60 caracteres y añade \"...\" \n                }\n                <span>{p.descripcion?.slice(0, 60)}...</span>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No se encontraron películas.</p>\n        )}\n      </div>\n    </div>\n  );\n  }\n  export default App;\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"CECYFLIX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"buscador\",\n      onSubmit: handleBuscar,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por título o género',\n        value: busqueda,\n        onChange: e => setBusqueda(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 1\n    }, this), recomendacion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bloque-recomendaciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"IA sugiere:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recomendacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 1\n    }, this), peliculasRecomendadas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"galeria\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF9E Pel\\xEDculas recomendadas por IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: peliculasRecomendadas.map(peli => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tarjeta\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: peli.poster,\n            alt: peli.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: peli.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: peli.descripcion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: peli.genero\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 1\n          }, this)]\n        }, peli.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 1\n    }, this), peliculasFiltradas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"galeria\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFAC Todas las pel\\xEDculas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: peliculasFiltradas.map((p, i) => {\n          var _p$descripcion;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tarjeta\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: p.poster,\n              alt: p.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: p.titulo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: p.genero\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [(_p$descripcion = p.descripcion) === null || _p$descripcion === void 0 ? void 0 : _p$descripcion.slice(0, 60), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 1\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 1\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"i4C5vuuaq+bII1MaK5Hn8Tkpt2Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","peliculas","setPeliculas","peliculasFiltradas","setPeliculasFiltradas","busqueda","setBusqueda","modoDescripcion","setModoDescripcion","recomendacion","setRecomendacion","loading","setLoading","peliculasRecomendadas","setPeliculasRecomendadas","fetch","then","res","ok","Error","status","json","data","console","log","catch","err","error","finally","handleBuscar","e","preventDefault","texto","toLowerCase","resultado","filter","p","titulo","includes","genero","startsWith","handleBuscarPorDescripcion","method","headers","body","JSON","stringify","prompt","map","join","seleccionadas","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","peli","src","poster","alt","descripcion","id","i","_p$descripcion","slice","_c","$RefreshReg$"],"sources":["C:/AWS/CECYTEMDespliegue/Practica4_2/recomendaciones-ia/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n//4.1 *********************************************************\n    //import React, { useState } from 'react';\n//import './App.css';\n    //import peliculas from './data/peliculas.json';\n// ******************************************************************\n\nfunction App() {\n  // Estados del componente\n  const [peliculas, setPeliculas] = useState([]);\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n  const [busqueda, setBusqueda] = useState('');\n  const [modoDescripcion, setModoDescripcion] = useState(false);\n  const [recomendacion, setRecomendacion] = useState('');\n  const [loading, setLoading] = useState(true); // Nuevo estado para controlar la carga\n\n  //4.1 **************************************************************\n//const [input, setInput] = useState('');\n    //const [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\n//const [recomendacionIA, setRecomendacionIA] = useState('');\nconst [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\n//const handleBuscarTexto = () => {\n//const texto = input.toLowerCase();\n\n//const filtradas = peliculas.filter((peli) =>\n//peli.titulo.toLowerCase().includes(texto) ||\n//peli.genero.toLowerCase().includes(texto) ||\n//peli.titulo.toLowerCase().startsWith(texto)\n//);\n//setPeliculasFiltradas(filtradas);\n//setPeliculasRecomendadas([]);\n//setRecomendacionIA('');\n//};\n\n//const handleBuscarDescripcion = async () => {\n//setRecomendacionIA('Pensando...');\n//setPeliculasRecomendadas([]);\n//setPeliculasFiltradas([]);\n//try {\n//const response = await fetch('/api/recomendaciones', {\n//method: 'POST',\n//headers: { 'Content-Type': 'application/json' },\n//body: JSON.stringify({\n//prompt: `Tengo una base de datos con estas películas:\n//${peliculas.map(p => p.titulo).join(', ')}.\n//Quiero que me digas solo los títulos de las películas que coincidan con esta\n//descripción: \"${input}\".\n//Devuélveme únicamente los títulos separados por comas.`\n//}),\n//});\n//const data = await response.json();\n//const textoIA = data.recomendacion.toLowerCase();\n//setRecomendacionIA(data.recomendacion);\n\n//const coincidencias = peliculas.filter((peli) =>\n//textoIA.includes(peli.titulo.toLowerCase())\n//);\n//setPeliculasRecomendadas(coincidencias);\n//} catch (err) {\n//setRecomendacionIA('❌ Error al obtener recomendación IA.');\n//}\n//};\n  //**************************************************************************\n\n  // Efecto para cargar las películas desde el backend al montar el componente\n  useEffect(() => {\n    setLoading(true); // Inicia el estado de carga\n    // Usamos la URL completa para asegurar la conexión al backend\n    fetch('http://localhost:4000/api/peliculas')\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP error! status: ${res.status}`);\n        }\n        return res.json();\n      })\n      .then(data => {\n        console.log('Películas obtenidas del backend:', data); // Log para depuración\n        setPeliculas(data);\n        setPeliculasFiltradas(data);\n      })\n      .catch(err => {\n        console.error('Error al obtener películas:', err); // Log de error\n        setPeliculas([]); // En caso de error, asegura que las listas estén vacías\n        setPeliculasFiltradas([]);\n      })\n      .finally(() => {\n        setLoading(false); // Finaliza el estado de carga\n      });\n  }, []); // El array de dependencias vacío asegura que se ejecute solo una vez al montar\n\n  // Función para manejar la búsqueda tradicional por título o género\n  const handleBuscar = (e) => {\n    e.preventDefault(); // Previene el comportamiento por defecto del formulario\n    const texto = busqueda.toLowerCase();\n    const resultado = peliculas.filter(p =>\n      p.titulo.toLowerCase().includes(texto) ||\n      p.genero.toLowerCase().includes(texto) ||\n      p.titulo.toLowerCase().startsWith(texto)\n    );\n    setPeliculasFiltradas(resultado);\n    setRecomendacion(''); // Limpia cualquier recomendación previa de IA\n  };\n\n  // Función para manejar la búsqueda por descripción usando la IA\n  const handleBuscarPorDescripcion = async () => {\n    try {\n      // Realiza una petición POST al endpoint de recomendaciones del backend\n      const res = await fetch('http://localhost:4000/api/recomendaciones', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        // Envía el prompt a la IA con la descripción del usuario y el catálogo de películas\n        body: JSON.stringify({ prompt: `Dame una recomendación basada en esta descripción: ${busqueda}. Usa solo películas de este catálogo: ${peliculas.map(p => p.titulo).join(', ')}.` })\n      });\n      const data = await res.json();\n      setRecomendacion(data.recomendacion); // Almacena la recomendación de la IA\n\n      // Filtra las películas que coincidan con la recomendación de la IA\n      const seleccionadas = peliculas.filter(p =>\n        data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())\n      );\n      if (seleccionadas.length > 0) {\n        setPeliculasFiltradas(seleccionadas); // Actualiza las películas filtradas\n      } else {\n        setPeliculasFiltradas([]); // Si no hay coincidencias, muestra una lista vacía\n      }\n    } catch (err) {\n      console.error('Error con IA:', err); // Manejo de errores en la llamada a la IA\n      setRecomendacion('Error al obtener recomendación de IA.');\n      setPeliculasFiltradas([]);\n    }\n  };\n\n  /*\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>CineVerse</h1>\n      </header>\n      <nav className=\"navbar\">\n        <form className=\"buscador\" onSubmit={handleBuscar}>\n          <input\n            type=\"text\"\n            placeholder={modoDescripcion ?\n              'Describe la peli que buscas...' :\n              'Busca por título o género'}\n            value={busqueda}\n            onChange={e => setBusqueda(e.target.value)}\n          />\n          {\n          //Botones condicionales según el modo de búsqueda \n          }\n          {modoDescripcion ? (\n            <button type=\"button\" onClick={handleBuscarPorDescripcion}>\n              Buscar con IA\n            </button>\n          ) : (\n            <button type=\"submit\">Buscar</button>\n          )}\n          {\n          //Botón para alternar entre modo tradicional y modo IA \n          }\n          <button type=\"button\" onClick={() => setModoDescripcion(!modoDescripcion)}>\n            {modoDescripcion ? 'Modo Tradicional' : 'Modo IA'}\n          </button>\n        </form>\n      </nav>\n\n      {\n      //Bloque para mostrar la recomendación de la IA si existe \n      }\n      {recomendacion && (\n        <div className=\"bloque-recomendaciones\">\n          <h2>IA sugiere:</h2>\n          <p>{recomendacion}</p>\n        </div>\n      )}\n\n      <div className=\"grid\">\n        {loading ? (\n          <p>Cargando películas...</p>\n        ) : peliculasFiltradas.length > 0 ? (\n          peliculasFiltradas.map((p, i) => (\n            <div className=\"tarjeta\" key={i}>\n              <img src={p.poster} alt={p.titulo} />\n              <div className=\"info\">\n                <h3>{p.titulo}</h3>\n                <p>{p.genero}</p>\n                {\n                //Limita la descripción a 60 caracteres y añade \"...\" \n                }\n                <span>{p.descripcion?.slice(0, 60)}...</span>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No se encontraron películas.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/\n\n\n\n\nreturn (\n<div className=\"App\">\n<h1 className=\"titulo\">CECYFLIX</h1>\n\n{/* \n<div className=\"buscador\">\n<input\ntype=\"text\"\nplaceholder=\"¿Qué te gustaría ver hoy?\"\nvalue={input}\nonChange={(e) => setInput(e.target.value)}\nrequired\n/>\n<button onClick={handleBuscarTexto}>Buscar</button>\n<button onClick={handleBuscarDescripcion} className=\"btn-ia\">\nBuscar por descripción</button>\n</div>\n*/}\n\n{/* 4.2 */}\n<form className=\"buscador\" onSubmit={handleBuscar}>\n<input\ntype=\"text\"\nplaceholder={modoDescripcion ? 'Describe la peli que buscas...' :\n'Busca por título o género'}\nvalue={busqueda}\nonChange={e => setBusqueda(e.target.value)}\n/>\n{/* Botones condicionales según el modo */}\n</form>\n{/* 4.2 */}\n\n{recomendacion && (\n<div className=\"bloque-recomendaciones\">\n<h2>IA sugiere:</h2>\n<p>{recomendacion}</p>\n</div>\n)}\n\n{/*\n{recomendacionIA && (\n<div className=\"bloque-recomendaciones\">\n<h2>✨ Recomendación IA</h2>\n<p>{recomendacionIA}</p>\n</div>\n)}\n*/}\n\n{peliculasRecomendadas.length > 0 && (\n<div className=\"galeria\">\n<h2>🎞 Películas recomendadas por IA</h2>\n<div className=\"grid\">\n{peliculasRecomendadas.map((peli) => (\n<div className=\"tarjeta\" key={peli.id}>\n<img src={peli.poster} alt={peli.titulo} />\n<div className=\"info\">\n<h3>{peli.titulo}</h3>\n<p>{peli.descripcion}</p>\n<span>{peli.genero}</span>\n</div>\n</div>\n))}\n</div>\n</div>\n)}\n\n{peliculasFiltradas.length > 0 && (\n<div className=\"galeria\">\n<h2>🎬 Todas las películas</h2>\n\n{/* \n<div className=\"grid\">\n{peliculasFiltradas.map((peli) => (\n<div className=\"tarjeta\" key={peli.id}>\n<img src={peli.poster} alt={peli.titulo} />\n<div className=\"info\">\n<h3>{peli.titulo}</h3>\n<p>{peli.descripcion}</p>\n<span>{peli.genero}</span>\n</div>\n</div>\n))}\n</div>\n*/}\n<div className=\"grid\">\n{peliculasFiltradas.map((p, i) => (\n<div className=\"tarjeta\" key={i}>\n<img src={p.poster} alt={p.titulo} />\n<div className=\"info\">\n<h3>{p.titulo}</h3>\n<p>{p.genero}</p>\n<span>{p.descripcion?.slice(0, 60)}...</span>\n</div>\n</div>\n))}\n</div>\n\n</div>\n)}\n</div>\n\n\n\n);\n}\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}