{"ast":null,"code":"var _jsxFileName = \"C:\\\\AWS\\\\CECYTEMDespliegue\\\\Practica4_1\\\\recomendaciones-ia\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\nimport './App.css';\nimport peliculas from './data/peliculas.json';\nfunction App() {\n  const [input, setInput] = useState('');\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\n  const [recomendacionIA, setRecomendacionIA] = useState('');\n  const [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\n  \n  const handleBuscarTexto = () => {\n    const texto = input.toLowerCase();\n\n    const filtradas = peliculas.filter((peli) =>\n      peli.titulo.toLowerCase().includes(texto) ||\n      peli.genero.toLowerCase().includes(texto) ||\n      peli.titulo.toLowerCase().startsWith(texto)\n    );\n\n    setPeliculasFiltradas(filtradas);\n    setPeliculasRecomendadas([]);\n    setRecomendacionIA('');\n  };\n  const handleBuscarDescripcion = async () => {\n    setRecomendacionIA('Pensando...');\n    setPeliculasRecomendadas([]);\n    setPeliculasFiltradas([]);\n    try {\n      const response = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          prompt: `Tengo una base de datos con estas pel√≠culas: ${peliculas.map(p => p.titulo).join(', ')}. Quiero que me digas solo los t√≠tulos de las pel√≠culas que coincidan con esta descripci√≥n: \"${input}\". Devu√©lveme √∫nicamente los t√≠tulos separados por comas.`\n      }),\n    });\n\n    const data = await response.json();\n    const textoIA = data.recomendacion.toLowerCase();\n    setRecomendacionIA(data.recomendacion);\n\n    const coincidencias = peliculas.filter((peli) => \n      textoIA.includes(peli.titulo.toLowerCase())\n    );\n    \n    setPeliculasRecomendadas(coincidencias);\n  } catch (err) {\n    setRecomendacionIA('‚ùå Error al obtener recomendaci√≥n IA.');\n  }\n};\n\nreturn (\n  <div className=\"App\">\n    <h1 className=\"titulo\">CECYFLIX</h1>\n    <div className=\"buscador\">\n      <input\n        type=\"text\"\n        placeholder=\"¬øQu√© te gustar√≠a ver hoy?\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        required\n      />\n      <button onClick={handleBuscarTexto}>Buscar</button>\n      <button onClick={handleBuscarDescripcion} className=\"btn-ia\">\n      Buscar por descripci√≥n</button>\n  </div>\n  \n  {recomendacionIA && (\n    <div className=\"bloque-recomendaciones\">\n      <h2>‚ú® Recomendaci√≥n IA</h2>\n      <p>{recomendacionIA}</p>\n    </div>\n  )}\n\n  {peliculasRecomendadas.length > 0 && (\n    <div className=\"galeria\">\n      <h2>üéû Pel√≠culas recomendadas por IA</h2>\n      <div className=\"grid\">\n        {peliculasRecomendadas.map((peli) => (\n          <div className=\"tarjeta\" key={peli.id}>\n            <img src={peli.poster} alt={peli.titulo} />\n            <div className=\"info\">\n              <h3>{peli.titulo}</h3>\n              <p>{peli.descripcion}</p>\n              <span>{peli.genero}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )}\n\n      {peliculasFiltradas.length > 0 && (\n        <div className=\"galeria\">\n          <h2>üé¨ Todas las pel√≠culas</h2>\n          <div className=\"grid\">\n            {peliculasFiltradas.map((peli) => (\n              <div className=\"tarjeta\" key={peli.id}>\n                <img src={peli.poster} alt={peli.titulo} />\n                <div className=\"info\">\n                  <h3>{peli.titulo}</h3>\n                  <p>{peli.descripcion}</p>\n                  <span>{peli.genero}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default App;*/\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Aseg√∫rate de que este archivo exista en tu proyecto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estados para almacenar las pel√≠culas, el filtro de b√∫squeda, el modo de b√∫squeda y la recomendaci√≥n de IA\n  const [peliculas, setPeliculas] = useState([]);\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n  const [busqueda, setBusqueda] = useState('');\n  const [modoDescripcion, setModoDescripcion] = useState(false); // false para b√∫squeda tradicional, true para IA\n  const [recomendacion, setRecomendacion] = useState('');\n\n  // useEffect para cargar las pel√≠culas desde el backend cuando el componente se monta\n  useEffect(() => {\n    // Realiza una petici√≥n GET a la API de pel√≠culas de tu backend\n    fetch('/api/peliculas').then(res => res.json()) // Convierte la respuesta a JSON\n    .then(data => {\n      setPeliculas(data); // Guarda todas las pel√≠culas obtenidas\n      setPeliculasFiltradas(data); // Inicialmente, las pel√≠culas filtradas son todas las pel√≠culas\n    }).catch(err => console.error('Error al obtener pel√≠culas:', err)); // Manejo de errores\n  }, []); // El array de dependencias vac√≠o asegura que este efecto se ejecute solo una vez (al montar)\n\n  // Funci√≥n para manejar la b√∫squeda tradicional (por t√≠tulo o g√©nero)\n  const handleBuscar = e => {\n    e.preventDefault(); // Previene el comportamiento por defecto del formulario\n    const texto = busqueda.toLowerCase(); // Convierte el texto de b√∫squeda a min√∫sculas\n    // Filtra las pel√≠culas que coincidan con el t√≠tulo, g√©nero o que empiecen con el texto\n    const resultado = peliculas.filter(p => p.titulo.toLowerCase().includes(texto) || p.genero.toLowerCase().includes(texto) || p.titulo.toLowerCase().startsWith(texto));\n    setPeliculasFiltradas(resultado); // Actualiza el estado de las pel√≠culas filtradas\n    setRecomendacion(''); // Limpia cualquier recomendaci√≥n de IA anterior\n  };\n\n  // Funci√≥n para manejar la b√∫squeda por descripci√≥n usando IA\n  const handleBuscarPorDescripcion = async () => {\n    try {\n      // Realiza una petici√≥n POST a la API de recomendaciones de IA de tu backend\n      const res = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // Env√≠a un prompt a la IA con la descripci√≥n de b√∫squeda y el cat√°logo de pel√≠culas\n        body: JSON.stringify({\n          prompt: `Dame una recomendaci√≥n basada en esta descripci√≥n: ${busqueda}. Usa solo pel√≠culas de este cat√°logo: ${peliculas.map(p => p.titulo).join(', ')}.`\n        })\n      });\n      const data = await res.json(); // Convierte la respuesta a JSON\n      setRecomendacion(data.recomendacion); // Guarda la recomendaci√≥n generada por la IA\n\n      // Filtra las pel√≠culas cuyo t√≠tulo est√© contenido en la recomendaci√≥n de la IA\n      const seleccionadas = peliculas.filter(p => data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase()));\n\n      // Si hay pel√≠culas seleccionadas, actualiza el estado de las pel√≠culas filtradas\n      if (seleccionadas.length > 0) {\n        setPeliculasFiltradas(seleccionadas);\n      } else {\n        // Si no hay coincidencias directas, puedes decidir qu√© mostrar (por ejemplo, todas las pel√≠culas o un mensaje)\n        setPeliculasFiltradas([]); // Opcional: mostrar un array vac√≠o si no hay coincidencias\n      }\n    } catch (err) {\n      console.error('Error con IA:', err); // Manejo de errores en la petici√≥n a la IA\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CineVerse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"buscador\",\n        onSubmit: modoDescripcion ? null : handleBuscar,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por t√≠tulo o g√©nero',\n          value: busqueda,\n          onChange: e => setBusqueda(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botones-busqueda\",\n          children: [!modoDescripcion ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleBuscarPorDescripcion,\n            children: \"Buscar por IA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModoDescripcion(!modoDescripcion),\n            children: [\"Cambiar a b\\xFAsqueda \", modoDescripcion ? 'tradicional' : 'por IA']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), recomendacion && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bloque-recomendaciones\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"IA sugiere:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recomendacion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"grid\",\n      children: peliculasFiltradas.map((p, i) => {\n        var _p$descripcion;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tarjeta\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: p.poster || `https://placehold.co/200x300/cccccc/333333?text=${p.titulo}`,\n            alt: p.titulo,\n            className: \"rounded-lg shadow-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: p.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: p.genero\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [(_p$descripcion = p.descripcion) === null || _p$descripcion === void 0 ? void 0 : _p$descripcion.slice(0, 60), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7dl2JW6kaHNERAH9j0sOGRRFNCk=\");\n_c = App;\nexport default App; // <<-- ¬°¬°¬°Esta l√≠nea es crucial!!!\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","peliculas","setPeliculas","peliculasFiltradas","setPeliculasFiltradas","busqueda","setBusqueda","modoDescripcion","setModoDescripcion","recomendacion","setRecomendacion","fetch","then","res","json","data","catch","err","console","error","handleBuscar","e","preventDefault","texto","toLowerCase","resultado","filter","p","titulo","includes","genero","startsWith","handleBuscarPorDescripcion","method","headers","body","JSON","stringify","prompt","map","join","seleccionadas","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","i","_p$descripcion","src","poster","alt","descripcion","slice","_c","$RefreshReg$"],"sources":["C:/AWS/CECYTEMDespliegue/Practica4_1/recomendaciones-ia/src/App.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport './App.css';\nimport peliculas from './data/peliculas.json';\nfunction App() {\n  const [input, setInput] = useState('');\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\n  const [recomendacionIA, setRecomendacionIA] = useState('');\n  const [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\n  \n  const handleBuscarTexto = () => {\n    const texto = input.toLowerCase();\n\n    const filtradas = peliculas.filter((peli) =>\n      peli.titulo.toLowerCase().includes(texto) ||\n      peli.genero.toLowerCase().includes(texto) ||\n      peli.titulo.toLowerCase().startsWith(texto)\n    );\n\n    setPeliculasFiltradas(filtradas);\n    setPeliculasRecomendadas([]);\n    setRecomendacionIA('');\n  };\n  const handleBuscarDescripcion = async () => {\n    setRecomendacionIA('Pensando...');\n    setPeliculasRecomendadas([]);\n    setPeliculasFiltradas([]);\n    try {\n      const response = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          prompt: `Tengo una base de datos con estas pel√≠culas: ${peliculas.map(p => p.titulo).join(', ')}. Quiero que me digas solo los t√≠tulos de las pel√≠culas que coincidan con esta descripci√≥n: \"${input}\". Devu√©lveme √∫nicamente los t√≠tulos separados por comas.`\n      }),\n    });\n\n    const data = await response.json();\n    const textoIA = data.recomendacion.toLowerCase();\n    setRecomendacionIA(data.recomendacion);\n\n    const coincidencias = peliculas.filter((peli) => \n      textoIA.includes(peli.titulo.toLowerCase())\n    );\n    \n    setPeliculasRecomendadas(coincidencias);\n  } catch (err) {\n    setRecomendacionIA('‚ùå Error al obtener recomendaci√≥n IA.');\n  }\n};\n\nreturn (\n  <div className=\"App\">\n    <h1 className=\"titulo\">CECYFLIX</h1>\n    <div className=\"buscador\">\n      <input\n        type=\"text\"\n        placeholder=\"¬øQu√© te gustar√≠a ver hoy?\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        required\n      />\n      <button onClick={handleBuscarTexto}>Buscar</button>\n      <button onClick={handleBuscarDescripcion} className=\"btn-ia\">\n      Buscar por descripci√≥n</button>\n  </div>\n  \n  {recomendacionIA && (\n    <div className=\"bloque-recomendaciones\">\n      <h2>‚ú® Recomendaci√≥n IA</h2>\n      <p>{recomendacionIA}</p>\n    </div>\n  )}\n\n  {peliculasRecomendadas.length > 0 && (\n    <div className=\"galeria\">\n      <h2>üéû Pel√≠culas recomendadas por IA</h2>\n      <div className=\"grid\">\n        {peliculasRecomendadas.map((peli) => (\n          <div className=\"tarjeta\" key={peli.id}>\n            <img src={peli.poster} alt={peli.titulo} />\n            <div className=\"info\">\n              <h3>{peli.titulo}</h3>\n              <p>{peli.descripcion}</p>\n              <span>{peli.genero}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )}\n\n      {peliculasFiltradas.length > 0 && (\n        <div className=\"galeria\">\n          <h2>üé¨ Todas las pel√≠culas</h2>\n          <div className=\"grid\">\n            {peliculasFiltradas.map((peli) => (\n              <div className=\"tarjeta\" key={peli.id}>\n                <img src={peli.poster} alt={peli.titulo} />\n                <div className=\"info\">\n                  <h3>{peli.titulo}</h3>\n                  <p>{peli.descripcion}</p>\n                  <span>{peli.genero}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default App;*/\n\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Aseg√∫rate de que este archivo exista en tu proyecto\n\nfunction App() {\n  // Estados para almacenar las pel√≠culas, el filtro de b√∫squeda, el modo de b√∫squeda y la recomendaci√≥n de IA\n  const [peliculas, setPeliculas] = useState([]);\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n  const [busqueda, setBusqueda] = useState('');\n  const [modoDescripcion, setModoDescripcion] = useState(false); // false para b√∫squeda tradicional, true para IA\n  const [recomendacion, setRecomendacion] = useState('');\n\n  // useEffect para cargar las pel√≠culas desde el backend cuando el componente se monta\n  useEffect(() => {\n    // Realiza una petici√≥n GET a la API de pel√≠culas de tu backend\n    fetch('/api/peliculas')\n      .then(res => res.json()) // Convierte la respuesta a JSON\n      .then(data => {\n        setPeliculas(data); // Guarda todas las pel√≠culas obtenidas\n        setPeliculasFiltradas(data); // Inicialmente, las pel√≠culas filtradas son todas las pel√≠culas\n      })\n      .catch(err => console.error('Error al obtener pel√≠culas:', err)); // Manejo de errores\n  }, []); // El array de dependencias vac√≠o asegura que este efecto se ejecute solo una vez (al montar)\n\n  // Funci√≥n para manejar la b√∫squeda tradicional (por t√≠tulo o g√©nero)\n  const handleBuscar = (e) => {\n    e.preventDefault(); // Previene el comportamiento por defecto del formulario\n    const texto = busqueda.toLowerCase(); // Convierte el texto de b√∫squeda a min√∫sculas\n    // Filtra las pel√≠culas que coincidan con el t√≠tulo, g√©nero o que empiecen con el texto\n    const resultado = peliculas.filter(p =>\n      p.titulo.toLowerCase().includes(texto) ||\n      p.genero.toLowerCase().includes(texto) ||\n      p.titulo.toLowerCase().startsWith(texto)\n    );\n    setPeliculasFiltradas(resultado); // Actualiza el estado de las pel√≠culas filtradas\n    setRecomendacion(''); // Limpia cualquier recomendaci√≥n de IA anterior\n  };\n\n  // Funci√≥n para manejar la b√∫squeda por descripci√≥n usando IA\n  const handleBuscarPorDescripcion = async () => {\n    try {\n      // Realiza una petici√≥n POST a la API de recomendaciones de IA de tu backend\n      const res = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        // Env√≠a un prompt a la IA con la descripci√≥n de b√∫squeda y el cat√°logo de pel√≠culas\n        body: JSON.stringify({ prompt: `Dame una recomendaci√≥n basada en esta descripci√≥n: ${busqueda}. Usa solo pel√≠culas de este cat√°logo: ${peliculas.map(p => p.titulo).join(', ')}.` })\n      });\n      const data = await res.json(); // Convierte la respuesta a JSON\n      setRecomendacion(data.recomendacion); // Guarda la recomendaci√≥n generada por la IA\n\n      // Filtra las pel√≠culas cuyo t√≠tulo est√© contenido en la recomendaci√≥n de la IA\n      const seleccionadas = peliculas.filter(p =>\n        data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())\n      );\n\n      // Si hay pel√≠culas seleccionadas, actualiza el estado de las pel√≠culas filtradas\n      if (seleccionadas.length > 0) {\n        setPeliculasFiltradas(seleccionadas);\n      } else {\n        // Si no hay coincidencias directas, puedes decidir qu√© mostrar (por ejemplo, todas las pel√≠culas o un mensaje)\n        setPeliculasFiltradas([]); // Opcional: mostrar un array vac√≠o si no hay coincidencias\n      }\n    } catch (err) {\n      console.error('Error con IA:', err); // Manejo de errores en la petici√≥n a la IA\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>CineVerse</h1>\n        <form className=\"buscador\" onSubmit={modoDescripcion ? null : handleBuscar}>\n          <input\n            type=\"text\"\n            placeholder={modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por t√≠tulo o g√©nero'}\n            value={busqueda}\n            onChange={e => setBusqueda(e.target.value)}\n          />\n          <div className=\"botones-busqueda\">\n            {/* Bot√≥n de b√∫squeda tradicional o por IA, seg√∫n el modo seleccionado */}\n            {!modoDescripcion ? (\n              <button type=\"submit\">Buscar</button>\n            ) : (\n              <button type=\"button\" onClick={handleBuscarPorDescripcion}>Buscar por IA</button>\n            )}\n            {/* Bot√≥n para alternar entre los modos de b√∫squeda */}\n            <button\n              type=\"button\"\n              onClick={() => setModoDescripcion(!modoDescripcion)}\n            >\n              Cambiar a b√∫squeda {modoDescripcion ? 'tradicional' : 'por IA'}\n            </button>\n          </div>\n        </form>\n        {/* Muestra la recomendaci√≥n de IA si existe */}\n        {recomendacion && (\n          <div className=\"bloque-recomendaciones\">\n            <h2>IA sugiere:</h2>\n            <p>{recomendacion}</p>\n          </div>\n        )}\n      </header>\n\n      <main className=\"grid\">\n        {/* Mapea y renderiza las pel√≠culas filtradas */}\n        {peliculasFiltradas.map((p, i) => (\n          <div className=\"tarjeta\" key={i}>\n            {/* Muestra el p√≥ster de la pel√≠cula o un placeholder si no hay imagen */}\n            <img\n              src={p.poster || `https://placehold.co/200x300/cccccc/333333?text=${p.titulo}`}\n              alt={p.titulo}\n              className=\"rounded-lg shadow-md\"\n            />\n            <div className=\"info\">\n              <h3>{p.titulo}</h3>\n              <p>{p.genero}</p>\n              {/* Muestra una sinopsis limitada a 60 caracteres */}\n              <span>{p.descripcion?.slice(0, 60)}...</span>\n            </div>\n          </div>\n        ))}\n      </main>\n    </div>\n  );\n}\n\nexport default App; // <<-- ¬°¬°¬°Esta l√≠nea es crucial!!!\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}